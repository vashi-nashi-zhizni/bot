import asyncio
import logging
import sys
from aiogram import Bot, Dispatcher
from aiogram.fsm.storage.memory import MemoryStorage
from config.config import TOKEN, DEFAULT_BOT_PROPERTIES, GROUP_ID, MESSAGE_THREAD_ID
from utils.commands import set_commands
from handlers import register_all_handlers
from states.forms import register_all_states

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    stream=sys.stdout
)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ —Ñ—É–Ω–∫—Ü–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
bot = Bot(token=TOKEN, default=DEFAULT_BOT_PROPERTIES)

async def send_startup_notification():
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞ –≤ –∞–¥–º–∏–Ω-–∫–∞–Ω–∞–ª"""
    try:
        environment = "PRODUCTION" if GROUP_ID else "DEVELOPMENT"
        await bot.send_message(
            GROUP_ID,
            f"üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –≤ —Ä–µ–∂–∏–º–µ {environment}\n"
            f"–í–µ—Ä—Å–∏—è: {sys.version}\n"
            f"–í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: {logging.Formatter().formatTime(logging.LogRecord('', 0, '', 0, '', 0, None, None))}",
            message_thread_id=MESSAGE_THREAD_ID
        )
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–ø—É—Å–∫–µ: {e}")

async def main():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
    storage = MemoryStorage()
    dp = Dispatcher(storage=storage)

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π –∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    register_all_states(dp)
    register_all_handlers(dp)
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
    await set_commands(bot)
    
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    logging.info("–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–ø—É—Å–∫–µ
    await send_startup_notification()
    
    # –ó–∞–ø—É—Å–∫ –ø–æ–ª–ª–∏–Ω–≥–∞
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main()) 