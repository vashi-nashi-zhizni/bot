from aiogram import types, Bot, Dispatcher
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from states.forms import HistoryForm
from config.config import GROUP_ID, MESSAGE_THREAD_ID
import logging

def register_history_handlers(dp: Dispatcher):
    dp.message.register(start_history, Command('history'))
    dp.message.register(request_media_for_history,
                       HistoryForm.waiting,
                       lambda message: message.text == "–î–æ–±–∞–≤–∏—Ç—å –º–µ–¥–∏–∞")
    dp.message.register(process_history_text,
                       HistoryForm.waiting,
                       lambda message: message.text != "–î–æ–±–∞–≤–∏—Ç—å –º–µ–¥–∏–∞")
    dp.message.register(process_history_with_media,
                       HistoryForm.media_processing,
                       lambda message: message.video or message.audio or 
                                     message.video_note or message.voice)
    dp.message.register(process_history_media_fallback,
                       HistoryForm.media_processing)

async def start_history(message: types.Message, state: FSMContext):
    await state.set_state(HistoryForm.waiting)
    markup = types.ReplyKeyboardMarkup(
        keyboard=[
            [types.KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –±–µ–∑ –º–µ–¥–∏–∞")],
            [types.KeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –º–µ–¥–∏–∞")]
        ],
        resize_keyboard=True,
        one_time_keyboard=True
    )
    await message.answer(
        "–†–∞—Å—Å–∫–∞–∂–∏ —Å–≤–æ—é –∏—Å—Ç–æ—Ä–∏—é, —á—Ç–æ–±—ã –º—ã —Å–º–æ–≥–ª–∏ –∑–∞–ø–æ—Å—Ç–∏—Ç—å –µ—ë –≤ –Ω–∞—à–∏—Ö —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö. "
        "–í–æ–∑–º–æ–∂–Ω–æ, –º—ã –¥–∞–∂–µ –ø—Ä–æ—á–∏—Ç–∞–µ–º —Ç–≤–æ—é –∏—Å—Ç–æ—Ä–∏—é –≤ –æ–¥–Ω–æ–º –∏–∑ –≤—ã–ø—É—Å–∫–æ–≤ –∏ –ø–æ–¥–µ–ª–∏–º—Å—è —Å–≤–æ–∏–º–∏ —á—É–≤—Å—Ç–≤–∞–º–∏ üñ§",
        reply_markup=markup
    )

async def request_media_for_history(message: types.Message, state: FSMContext):
    await state.set_state(HistoryForm.media_processing)
    await message.answer(
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ –≤–∏–¥–µ–æ, –∞—É–¥–∏–æ, –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –∫—Ä—É–≥–æ–≤–æ–µ –≤–∏–¥–µ–æ:",
        reply_markup=types.ReplyKeyboardRemove()
    )

async def process_history_text(message: types.Message, state: FSMContext):
    if message.text == "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –±–µ–∑ –º–µ–¥–∏–∞":
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à—É –∏—Å—Ç–æ—Ä–∏—é:")
        return
    
    username = message.from_user.username or message.from_user.full_name
    history_text = f"üìñ‚ú® –ò—Å—Ç–æ—Ä–∏—è –æ—Ç @{username}:\n\n{message.text}"
    await message.bot.send_message(GROUP_ID, history_text, message_thread_id=MESSAGE_THREAD_ID)
    await message.answer("–°–ø–∞—Å–∏–±–æ –±–æ–ª—å—à–æ–µ –∑–∞ –¥–æ–≤–µ—Ä–∏–µ! üßø")
    await state.clear()

async def process_history_with_media(message: types.Message, state: FSMContext):
    username = message.from_user.username or message.from_user.full_name
    caption = message.caption or "–ò—Å—Ç–æ—Ä–∏—è –±–µ–∑ —Ç–µ–∫—Å—Ç–∞"
    header_text = f"üìñ‚ú® –ò—Å—Ç–æ—Ä–∏—è —Å –º–µ–¥–∏–∞ –æ—Ç @{username}:\n\n{caption}"
    
    try:
        if message.video:
            await message.bot.send_video(GROUP_ID, message.video.file_id, caption=header_text, message_thread_id=MESSAGE_THREAD_ID)
        elif message.audio:
            await message.bot.send_audio(GROUP_ID, message.audio.file_id, caption=header_text, message_thread_id=MESSAGE_THREAD_ID)
        elif message.voice:
            await message.bot.send_voice(GROUP_ID, message.voice.file_id, caption=header_text, message_thread_id=MESSAGE_THREAD_ID)
        elif message.video_note:
            await message.bot.send_message(GROUP_ID, header_text, message_thread_id=MESSAGE_THREAD_ID)
            await message.bot.send_video_note(GROUP_ID, message.video_note.file_id, message_thread_id=MESSAGE_THREAD_ID)
        
        await message.answer("–°–ø–∞—Å–∏–±–æ –±–æ–ª—å—à–æ–µ –∑–∞ –¥–æ–≤–µ—Ä–∏–µ! üßø")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –º–µ–¥–∏–∞: {e}")
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –º–µ–¥–∏–∞")
    await state.clear()

async def process_history_media_fallback(message: types.Message, state: FSMContext):
    await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–µ–¥–∏–∞—Ñ–∞–π–ª –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã.")

# –û—Å—Ç–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–∑ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ 