from aiogram import types, Bot, Dispatcher
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from states.forms import GuestForm
from config.config import GROUP_ID, MESSAGE_THREAD_ID
import logging

def register_guest_handlers(dp: Dispatcher):
    dp.message.register(start_guest_form, Command('guest'))
    dp.message.register(process_name, StateFilter(GuestForm.name))
    dp.message.register(process_age, StateFilter(GuestForm.age))
    dp.message.register(process_country, StateFilter(GuestForm.country))
    dp.message.register(process_job, StateFilter(GuestForm.job))
    dp.message.register(process_story, StateFilter(GuestForm.story))
    dp.message.register(process_meeting_time, StateFilter(GuestForm.meeting_time))

async def start_guest_form(message: types.Message, state: FSMContext):
    await state.set_state(GuestForm.name)
    await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã:\n1. –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")

async def process_name(message: types.Message, state: FSMContext):
    await state.update_data(name=message.text)
    await state.set_state(GuestForm.age)
    await message.answer("2. –°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?")

async def process_age(message: types.Message, state: FSMContext):
    await state.update_data(age=message.text)
    await state.set_state(GuestForm.country)
    await message.answer("3. –í –∫–∞–∫–æ–π —Ç—ã —Å–µ–π—á–∞—Å —Å—Ç—Ä–∞–Ω–µ?")

async def process_country(message: types.Message, state: FSMContext):
    await state.update_data(country=message.text)
    await state.set_state(GuestForm.job)
    await message.answer("4. –ö–µ–º —Ç—ã —Ä–∞–±–æ—Ç–∞–µ—à—å?")

async def process_job(message: types.Message, state: FSMContext):
    await state.update_data(job=message.text)
    await state.set_state(GuestForm.story)
    await message.answer("5. –û —á—ë–º —Ç—ã —Ö–æ—á–µ—à—å —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –≤ –ø–æ–¥–∫–∞—Å—Ç–µ?")

async def process_story(message: types.Message, state: FSMContext):
    await state.update_data(story=message.text)
    await state.set_state(GuestForm.meeting_time)
    await message.answer("6. –ö–æ–≥–¥–∞ —Ç—ã –≥–æ—Ç–æ–≤ –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è? (–î–∞—Ç—ã –∏ –≤—Ä–µ–º—è)")

async def process_meeting_time(message: types.Message, state: FSMContext):
    data = await state.get_data()
    username = message.from_user.username or message.from_user.full_name
    
    guest_data = (
        f"üéß –ê–Ω–∫–µ—Ç–∞ –≥–æ—Å—Ç—è –æ—Ç @{username}:\n\n"
        f"1. –ò–º—è: {data['name']}\n"
        f"2. –í–æ–∑—Ä–∞—Å—Ç: {data['age']}\n"
        f"3. –°—Ç—Ä–∞–Ω–∞: {data['country']}\n"
        f"4. –ü—Ä–æ—Ñ–µ—Å—Å–∏—è: {data['job']}\n"
        f"5. –ò—Å—Ç–æ—Ä–∏—è: {data['story']}\n"
        f"6. –í—Ä–µ–º—è –≤—Å—Ç—Ä–µ—á–∏: {message.text}"
    )
    
    await message.bot.send_message(GROUP_ID, guest_data, message_thread_id=MESSAGE_THREAD_ID)
    await state.clear()
    await message.answer(
        "–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –Ω–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã!\n\n"
        "–ß—Ç–æ –¥–∞–ª—å—à–µ?\n\n"
        "üßø –î–æ–∂–¥–∞—Ç—å—Å—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –ø–æ –∞–Ω–∫–µ—Ç–µ\n"
        "üßø –í—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è –Ω–∞ –ø—Ä–µ–¥–∏–Ω—Ç–µ—Ä–≤—å—é –≤ Zoom"
    ) 